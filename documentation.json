{
	"pipes": [],
	"interfaces": [],
	"injectables": [],
	"guards": [],
	"interceptors": [],
	"classes": [],
	"directives": [],
	"components": [
		{
			"name": "AppComponent",
			"id": "component-AppComponent-c442d067c1dd3f415d8100cb9c9b544bce47f10df8a6a9188a11df3a2eb1ba72a24613aa2f96dd492dd0619d66e64942499a005332cd820f959304b24ee1940e",
			"file": "src/app/app.component.ts",
			"encapsulation": [],
			"entryComponents": [],
			"inputs": [],
			"outputs": [],
			"providers": [],
			"selector": "app-root",
			"styleUrls": [],
			"styles": [],
			"templateUrl": ["./app.component.html"],
			"viewProviders": [],
			"hostDirectives": [],
			"inputsClass": [],
			"outputsClass": [],
			"propertiesClass": [
				{
					"name": "title",
					"defaultValue": "'product-feedback-app'",
					"deprecated": false,
					"deprecationMessage": "",
					"type": "string",
					"indexKey": "",
					"optional": false,
					"description": "",
					"line": 12
				}
			],
			"methodsClass": [],
			"deprecated": false,
			"deprecationMessage": "",
			"hostBindings": [],
			"hostListeners": [],
			"standalone": true,
			"imports": [
				{
					"name": "RouterOutlet"
				}
			],
			"description": "",
			"rawdescription": "\n",
			"type": "component",
			"sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'product-feedback-app';\n}\n",
			"styleUrl": "./app.component.scss",
			"assetsDirs": [],
			"styleUrlsData": "",
			"stylesData": "",
			"extends": [],
			"templateData": "<router-outlet></router-outlet>\n"
		},
		{
			"name": "BoardBarComponent",
			"id": "component-BoardBarComponent-af4bab940789214f14490e5d68a3a7f02453bc08db14453394eb9cb5b58a18e45cbc6e9d1d984217f36a479debe5efe1a6a070e33ac620436abf4b63f809523a",
			"file": "src/app/features/feedback-board/components/board-bar/board-bar.component.ts",
			"encapsulation": [],
			"entryComponents": [],
			"inputs": [],
			"outputs": [],
			"providers": [],
			"selector": "app-board-bar",
			"styleUrls": [],
			"styles": [],
			"templateUrl": ["./board-bar.component.html"],
			"viewProviders": [],
			"hostDirectives": [],
			"inputsClass": [],
			"outputsClass": [],
			"propertiesClass": [],
			"methodsClass": [],
			"deprecated": false,
			"deprecationMessage": "",
			"hostBindings": [],
			"hostListeners": [],
			"standalone": true,
			"imports": [
				{
					"name": "UiButtonComponent",
					"type": "component"
				}
			],
			"description": "",
			"rawdescription": "\n",
			"type": "component",
			"sourceCode": "import { Component } from '@angular/core';\nimport { UiButtonComponent } from '../../../../shared/ui/components/ui-button/ui-button.component';\n\n@Component({\n  selector: 'app-board-bar',\n  standalone: true,\n  imports: [UiButtonComponent],\n  templateUrl: './board-bar.component.html',\n  styleUrl: './board-bar.component.scss',\n})\nexport class BoardBarComponent {}\n",
			"styleUrl": "./board-bar.component.scss",
			"assetsDirs": [],
			"styleUrlsData": "",
			"stylesData": "",
			"extends": [],
			"templateData": "<div class=\"test-class\">test</div>\n<ui-button></ui-button>\n"
		},
		{
			"name": "FeedbackBoardComponent",
			"id": "component-FeedbackBoardComponent-de525c622e2146daff4055b058a691b0b6928911e681cfa28360c1a94859a235f95f6f163134ddf7c708cf144deac43c0c96eda87489bd1f793d5c413cbb0695",
			"file": "src/app/features/feedback-board/pages/feedback-board/feedback-board.page.ts",
			"encapsulation": [],
			"entryComponents": [],
			"inputs": [],
			"outputs": [],
			"providers": [],
			"selector": "app-feedback-board",
			"styleUrls": [],
			"styles": [],
			"templateUrl": ["./feedback-board.page.html"],
			"viewProviders": [],
			"hostDirectives": [],
			"inputsClass": [],
			"outputsClass": [],
			"propertiesClass": [],
			"methodsClass": [],
			"deprecated": false,
			"deprecationMessage": "",
			"hostBindings": [],
			"hostListeners": [],
			"standalone": true,
			"imports": [
				{
					"name": "BoardBarComponent",
					"type": "component"
				}
			],
			"description": "",
			"rawdescription": "\n",
			"type": "component",
			"sourceCode": "import { Component } from '@angular/core';\nimport { BoardBarComponent } from '../../components/board-bar/board-bar.component';\n\n@Component({\n  selector: 'app-feedback-board',\n  standalone: true,\n  imports: [BoardBarComponent],\n  templateUrl: './feedback-board.page.html',\n  styleUrl: './feedback-board.page.scss',\n})\nexport class FeedbackBoardComponent {}\n",
			"styleUrl": "./feedback-board.page.scss",
			"assetsDirs": [],
			"styleUrlsData": "",
			"stylesData": "",
			"extends": [],
			"templateData": "<app-board-bar></app-board-bar>\n"
		},
		{
			"name": "UiButtonComponent",
			"id": "component-UiButtonComponent-403c2a71a1cb11bfff056af624adf97b625d1dea6f372aca6b98b99325a6f69347cd4cbc591ef001e0e1df274b83ff1e0a79b76d063854b04bb16d2a2db2a93e",
			"file": "src/app/shared/ui/components/ui-button/ui-button.component.ts",
			"encapsulation": [],
			"entryComponents": [],
			"inputs": [],
			"outputs": [],
			"providers": [],
			"selector": "ui-button",
			"styleUrls": [],
			"styles": [],
			"templateUrl": ["./ui-button.component.html"],
			"viewProviders": [],
			"hostDirectives": [],
			"inputsClass": [
				{
					"name": "buttonType",
					"defaultValue": "ButtonType.Primary",
					"deprecated": false,
					"deprecationMessage": "",
					"line": 18,
					"type": "ButtonType",
					"decorators": []
				},
				{
					"name": "icon",
					"deprecated": false,
					"deprecationMessage": "",
					"line": 21,
					"type": "IconDefinition",
					"decorators": []
				},
				{
					"name": "label",
					"defaultValue": "'Button'",
					"deprecated": false,
					"deprecationMessage": "",
					"line": 17,
					"type": "string",
					"decorators": []
				},
				{
					"name": "tall",
					"defaultValue": "false",
					"deprecated": false,
					"deprecationMessage": "",
					"line": 19,
					"type": "boolean",
					"decorators": []
				},
				{
					"name": "underlineHover",
					"defaultValue": "false",
					"deprecated": false,
					"deprecationMessage": "",
					"line": 20,
					"type": "boolean",
					"decorators": []
				}
			],
			"outputsClass": [],
			"propertiesClass": [],
			"methodsClass": [
				{
					"name": "getClasses",
					"args": [],
					"optional": false,
					"returnType": "Record<string, boolean>",
					"typeParameters": [],
					"line": 23,
					"deprecated": false,
					"deprecationMessage": "",
					"modifierKind": [123]
				}
			],
			"deprecated": false,
			"deprecationMessage": "",
			"hostBindings": [],
			"hostListeners": [],
			"standalone": true,
			"imports": [
				{
					"name": "FontAwesomeModule",
					"type": "module"
				},
				{
					"name": "NgClass"
				}
			],
			"description": "",
			"rawdescription": "\n",
			"type": "component",
			"sourceCode": "import { Component, Input } from '@angular/core';\nimport {\n  FontAwesomeModule,\n  IconDefinition,\n} from '@fortawesome/angular-fontawesome';\nimport { ButtonType } from './button-type.enum';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'ui-button',\n  standalone: true,\n  imports: [FontAwesomeModule, NgClass],\n  templateUrl: './ui-button.component.html',\n  styleUrl: './ui-button.component.scss',\n})\nexport class UiButtonComponent {\n  @Input() label: string = 'Button';\n  @Input() buttonType: ButtonType = ButtonType.Primary;\n  @Input() tall: boolean = false;\n  @Input() underlineHover: boolean = false;\n  @Input() icon?: IconDefinition;\n\n  private getClasses(): Record<string, boolean> {\n    const classList: Record<string, boolean> = {};\n    classList[this.buttonType] = true;\n    if (this.tall) classList['tall'] = true;\n    if (this.underlineHover) classList['underline-hover'] = true;\n    return classList;\n  }\n}\n",
			"styleUrl": "./ui-button.component.scss",
			"assetsDirs": [],
			"styleUrlsData": "",
			"stylesData": "",
			"extends": [],
			"templateData": "<button [ngClass]=\"getClasses()\">\n  @if (icon) {\n    <fa-icon [icon]=\"icon\"></fa-icon>\n  }\n  <span>{{ label }}</span>\n</button>\n"
		}
	],
	"modules": [],
	"miscellaneous": {
		"variables": [
			{
				"name": "appConfig",
				"ctype": "miscellaneous",
				"subtype": "variable",
				"file": "src/app/app.config.ts",
				"deprecated": false,
				"deprecationMessage": "",
				"type": "ApplicationConfig",
				"defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n  ],\n}"
			}
		],
		"functions": [],
		"typealiases": [],
		"enumerations": [
			{
				"name": "ButtonType",
				"childs": [
					{
						"name": "Accent",
						"deprecated": false,
						"deprecationMessage": "",
						"value": "accent"
					},
					{
						"name": "Primary",
						"deprecated": false,
						"deprecationMessage": "",
						"value": "primary"
					},
					{
						"name": "Dark",
						"deprecated": false,
						"deprecationMessage": "",
						"value": "dark"
					},
					{
						"name": "Destructive",
						"deprecated": false,
						"deprecationMessage": "",
						"value": "destructive"
					},
					{
						"name": "Bare",
						"deprecated": false,
						"deprecationMessage": "",
						"value": "bare"
					}
				],
				"ctype": "miscellaneous",
				"subtype": "enum",
				"deprecated": false,
				"deprecationMessage": "",
				"description": "",
				"file": "src/app/shared/ui/components/ui-button/button-type.enum.ts"
			}
		],
		"groupedVariables": {
			"src/app/app.config.ts": [
				{
					"name": "appConfig",
					"ctype": "miscellaneous",
					"subtype": "variable",
					"file": "src/app/app.config.ts",
					"deprecated": false,
					"deprecationMessage": "",
					"type": "ApplicationConfig",
					"defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n  ],\n}"
				}
			]
		},
		"groupedFunctions": {},
		"groupedEnumerations": {
			"src/app/shared/ui/components/ui-button/button-type.enum.ts": [
				{
					"name": "ButtonType",
					"childs": [
						{
							"name": "Accent",
							"deprecated": false,
							"deprecationMessage": "",
							"value": "accent"
						},
						{
							"name": "Primary",
							"deprecated": false,
							"deprecationMessage": "",
							"value": "primary"
						},
						{
							"name": "Dark",
							"deprecated": false,
							"deprecationMessage": "",
							"value": "dark"
						},
						{
							"name": "Destructive",
							"deprecated": false,
							"deprecationMessage": "",
							"value": "destructive"
						},
						{
							"name": "Bare",
							"deprecated": false,
							"deprecationMessage": "",
							"value": "bare"
						}
					],
					"ctype": "miscellaneous",
					"subtype": "enum",
					"deprecated": false,
					"deprecationMessage": "",
					"description": "",
					"file": "src/app/shared/ui/components/ui-button/button-type.enum.ts"
				}
			]
		},
		"groupedTypeAliases": {}
	},
	"routes": [],
	"coverage": {
		"count": 0,
		"status": "low",
		"files": [
			{
				"filePath": "src/app/app.component.ts",
				"type": "component",
				"linktype": "component",
				"name": "AppComponent",
				"coveragePercent": 0,
				"coverageCount": "0/2",
				"status": "low"
			},
			{
				"filePath": "src/app/app.config.ts",
				"type": "variable",
				"linktype": "miscellaneous",
				"linksubtype": "variable",
				"name": "appConfig",
				"coveragePercent": 0,
				"coverageCount": "0/1",
				"status": "low"
			},
			{
				"filePath": "src/app/features/feedback-board/components/board-bar/board-bar.component.ts",
				"type": "component",
				"linktype": "component",
				"name": "BoardBarComponent",
				"coveragePercent": 0,
				"coverageCount": "0/1",
				"status": "low"
			},
			{
				"filePath": "src/app/features/feedback-board/pages/feedback-board/feedback-board.page.ts",
				"type": "component",
				"linktype": "component",
				"name": "FeedbackBoardComponent",
				"coveragePercent": 0,
				"coverageCount": "0/1",
				"status": "low"
			},
			{
				"filePath": "src/app/shared/ui/components/ui-button/ui-button.component.ts",
				"type": "component",
				"linktype": "component",
				"name": "UiButtonComponent",
				"coveragePercent": 0,
				"coverageCount": "0/7",
				"status": "low"
			}
		]
	}
}
